name: 'dev'
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    working_dir: /api
    volumes:
      - ./api:/api
      - go-mod:/go/pkg/mod   # cache das deps
      - go-build:/root/.cache/go-build
    ports:
      - "8000:8000"
    environment:
      MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
      MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
      MINIO_REGION: '${MINIO_REGION}'
      MINIO_BUCKET: '${MINIO_BUCKET}'
      MONGO_URI: '${MONGO_URI}'
      POSTGRES_URI: '${POSTGRES_URI}'
  postgres:
    image: 'postgres:15'
    ports:
        - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
        POSTGRES_DB: '${DB_DATABASE}'
        POSTGRES_USER: '${DB_USERNAME}'
        POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
        - 'storage-postgres:/var/lib/postgresql/data'
    networks:
        - net
  mongo:
    image: 'mongo:8'
    restart: on-failure
    volumes:
      - storage-mongo:/data/db
    ports:
      - '2701:27017'
    networks:
      - net
  s3:
    build:
        context: ./s3
        dockerfile: Dockerfile
        args: 
            MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
            MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
            MINIO_REGION: '${MINIO_REGION}'
            MINIO_BUCKET: '${MINIO_BUCKET}'
    image: s3
    restart: on-failure
    environment:
        MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
        MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
        MINIO_REGION: '${MINIO_REGION}'
        MINIO_BUCKET: '${MINIO_BUCKET}'
    ports:
        - '9000:9000'
        - '9090:9090'
    volumes:
        - 'storage-s3:/data'
    networks:
        - net
networks:
  net:
    driver: bridge
volumes:
  go-mod:
  go-build:
  storage-postgres:
    driver: local
  storage-s3:
    driver: local 
  storage-mongo:
    driver: local 
